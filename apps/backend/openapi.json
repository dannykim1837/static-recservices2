{
  "openapi": "3.0.0",
  "info": {
    "title": "Rec Services API",
    "description": "API for managing employees and schedules",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Development Server"
    }
  ],
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "created_at": { "type": "string", "format": "date-time", "example": "2025-01-01T00:00:00Z" },
          "userID": { "type": ["integer", "null"], "example": null },
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "email": { "type": "string", "example": "john.doe@example.com" },
          "active": { "type": "boolean", "example": true },
          "location": { "type": ["integer", "null"], "example": 1 },
          "position": { "type": ["integer", "null"], "example": 1 },
          "shift": { "type": ["integer", "null"], "example": 99999 }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "Manager" },
          "count": { "type": "integer", "example": 1 }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "Main Office" },
          "count": { "type": "integer", "example": 1 },
          "address": { "type": "string", "example": "123 Test St" }
        }
      },
      "Shift": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 99999 },
          "created_at": { "type": "string", "format": "date-time", "example": "2025-01-01T00:00:00Z" },
          "start_time": { "type": "string", "format": "date-time", "example": "2025-01-01T09:00:00Z" },
          "end_time": { "type": "string", "format": "date-time", "example": "2025-01-01T17:00:00Z" },
          "up_for_trade": { "type": "boolean", "example": false },
          "duration": { "type": "integer", "example": 60 }
        }
      }
    }
  },
  "paths": {
    "/employees": {
      "get": {
        "summary": "Get all employees",
        "responses": {
          "200": {
            "description": "A list of employees.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Employee" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new employee",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Employee" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "summary": "Get an employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Employee" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "summary": "Update an employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Employee" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "summary": "Delete an employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/positions": {
      "get": {
        "summary": "Get all positions",
        "responses": {
          "200": {
            "description": "A list of positions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Position" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new position",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Position" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/positions/{id}": {
      "get": {
        "summary": "Get a position by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Position found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Position" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "summary": "Update a position by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Position" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "summary": "Delete a position by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/locations": {
      "get": {
        "summary": "Get all locations",
        "responses": {
          "200": {
            "description": "A list of locations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Location" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new location",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Location" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": "Get a location by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Location found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Location" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "summary": "Update a location by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Location" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "summary": "Delete a location by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/shifts": {
      "get": {
        "summary": "Get all shifts",
        "responses": {
          "200": {
            "description": "A list of shifts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Shift" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new shift",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Shift" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/shifts/{id}": {
      "get": {
        "summary": "Get a shift by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Shift found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Shift" }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "summary": "Update a shift by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Shift" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "summary": "Delete a shift by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    }
  },
  "tags": []
}
